var format = require('../');

var fixtures = [
//  [number, smallestUnit, decimals, expected]
    [.12, 'ms', 0, '0ms']
  , [.12, 'ms', 2, '0.12ms']
  , [345, 's', 0, '0s']
  , [345, 's', 3, '0.345s']
  , [1000, 'm', 1, '0m']
  , [1000, 's', 2, '1s']
  , [6543, 's', 0, '7s']
  , [6543, 's', 3, '6.543s']
  , [60000, 's', 0, '1m']
  , [61000, 's' , 0, '1m 1s']
  , [61200, 'ms', 0, '1m 1s 200ms']
  , [61200, 's', 0, '1m 1s']
  , [2*60*1000, 'm', 0, '2m']
  , [60*60*1000, 'm', 0, '1h']
  , [2*60*60*1000 + 60 * 1000, 'm', 0, '2h 1m']
  , [24*60*60*1000, 'm', 0, '1d']
  , [2*24*60*60*1000, 'm', 0, '2d']
  , [2*24*60*60*1000 + 1, 'ms', 0, '2d 1ms']
  , [2*24*60*60*1000 + 1000, 's', 0, '2d 1s']
  , [2*24*60*60*1000 + 1000, 's', 0, '2d 1s']
  , [7*24*60*60*1000, 's', 0, '1wk']
  , [8*24*60*60*1000, 's', 0, '1wk 1d']
  , [14*24*60*60*1000, 's', 0, '2wk']
  , [15*24*60*60*1000, 's', 0, '2wk 1d']
];


describe('Format date ranges', function () {
    fixtures.forEach(function (f) {
        it('format ' + f[0] + 'ms with smallest unit ' + f[1] 
            + ' using '+ f[2] + ' decimals.', function () {
            format(f[0], f[1], f[2]).should.equal(f[3]);
        });
    });
});
